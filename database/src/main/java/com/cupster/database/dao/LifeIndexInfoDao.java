package com.cupster.database.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.cupster.database.model.LifeIndexInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "LIFE_INDEX_INFO".
*/
public class LifeIndexInfoDao extends AbstractDao<LifeIndexInfo, Long> {

    public static final String TABLENAME = "LIFE_INDEX_INFO";

    /**
     * Properties of entity LifeIndexInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, long.class, "id", true, "_id");
        public final static Property Freshtime = new Property(1, String.class, "freshtime", false, "FRESHTIME");
        public final static Property Weaid = new Property(2, String.class, "weaid", false, "WEAID");
        public final static Property Days = new Property(3, String.class, "days", false, "DAYS");
        public final static Property Week_1 = new Property(4, String.class, "week_1", false, "WEEK_1");
        public final static Property Simcode = new Property(5, String.class, "simcode", false, "SIMCODE");
        public final static Property Citynm = new Property(6, String.class, "citynm", false, "CITYNM");
        public final static Property Cityid = new Property(7, String.class, "cityid", false, "CITYID");
        public final static Property Lifeindex_uv_id = new Property(8, String.class, "lifeindex_uv_id", false, "LIFEINDEX_UV_ID");
        public final static Property Lifeindex_uv_typeno = new Property(9, String.class, "lifeindex_uv_typeno", false, "LIFEINDEX_UV_TYPENO");
        public final static Property Lifeindex_uv_typenm = new Property(10, String.class, "lifeindex_uv_typenm", false, "LIFEINDEX_UV_TYPENM");
        public final static Property Lifeindex_uv_attr = new Property(11, String.class, "lifeindex_uv_attr", false, "LIFEINDEX_UV_ATTR");
        public final static Property Lifeindex_uv_dese = new Property(12, String.class, "lifeindex_uv_dese", false, "LIFEINDEX_UV_DESE");
        public final static Property Lifeindex_gm_id = new Property(13, String.class, "lifeindex_gm_id", false, "LIFEINDEX_GM_ID");
        public final static Property Lifeindex_gm_typeno = new Property(14, String.class, "lifeindex_gm_typeno", false, "LIFEINDEX_GM_TYPENO");
        public final static Property Lifeindex_gm_typenm = new Property(15, String.class, "lifeindex_gm_typenm", false, "LIFEINDEX_GM_TYPENM");
        public final static Property Lifeindex_gm_attr = new Property(16, String.class, "lifeindex_gm_attr", false, "LIFEINDEX_GM_ATTR");
        public final static Property Lifeindex_gm_dese = new Property(17, String.class, "lifeindex_gm_dese", false, "LIFEINDEX_GM_DESE");
        public final static Property Lifeindex_ct_id = new Property(18, String.class, "lifeindex_ct_id", false, "LIFEINDEX_CT_ID");
        public final static Property Lifeindex_ct_typeno = new Property(19, String.class, "lifeindex_ct_typeno", false, "LIFEINDEX_CT_TYPENO");
        public final static Property Lifeindex_ct_typenm = new Property(20, String.class, "lifeindex_ct_typenm", false, "LIFEINDEX_CT_TYPENM");
        public final static Property Lifeindex_ct_attr = new Property(21, String.class, "lifeindex_ct_attr", false, "LIFEINDEX_CT_ATTR");
        public final static Property Lifeindex_ct_dese = new Property(22, String.class, "lifeindex_ct_dese", false, "LIFEINDEX_CT_DESE");
        public final static Property Lifeindex_xc_id = new Property(23, String.class, "lifeindex_xc_id", false, "LIFEINDEX_XC_ID");
        public final static Property Lifeindex_xc_typeno = new Property(24, String.class, "lifeindex_xc_typeno", false, "LIFEINDEX_XC_TYPENO");
        public final static Property Lifeindex_xc_typenm = new Property(25, String.class, "lifeindex_xc_typenm", false, "LIFEINDEX_XC_TYPENM");
        public final static Property Lifeindex_xc_attr = new Property(26, String.class, "lifeindex_xc_attr", false, "LIFEINDEX_XC_ATTR");
        public final static Property Lifeindex_xc_dese = new Property(27, String.class, "lifeindex_xc_dese", false, "LIFEINDEX_XC_DESE");
        public final static Property Lifeindex_kq_id = new Property(28, String.class, "lifeindex_kq_id", false, "LIFEINDEX_KQ_ID");
        public final static Property Lifeindex_kq_typeno = new Property(29, String.class, "lifeindex_kq_typeno", false, "LIFEINDEX_KQ_TYPENO");
        public final static Property Lifeindex_kq_typenm = new Property(30, String.class, "lifeindex_kq_typenm", false, "LIFEINDEX_KQ_TYPENM");
        public final static Property Lifeindex_kq_attr = new Property(31, String.class, "lifeindex_kq_attr", false, "LIFEINDEX_KQ_ATTR");
        public final static Property Lifeindex_kq_dese = new Property(32, String.class, "lifeindex_kq_dese", false, "LIFEINDEX_KQ_DESE");
    }


    public LifeIndexInfoDao(DaoConfig config) {
        super(config);
    }
    
    public LifeIndexInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"LIFE_INDEX_INFO\" (" + //
                "\"_id\" INTEGER PRIMARY KEY NOT NULL ," + // 0: id
                "\"FRESHTIME\" TEXT," + // 1: freshtime
                "\"WEAID\" TEXT," + // 2: weaid
                "\"DAYS\" TEXT," + // 3: days
                "\"WEEK_1\" TEXT," + // 4: week_1
                "\"SIMCODE\" TEXT," + // 5: simcode
                "\"CITYNM\" TEXT," + // 6: citynm
                "\"CITYID\" TEXT," + // 7: cityid
                "\"LIFEINDEX_UV_ID\" TEXT," + // 8: lifeindex_uv_id
                "\"LIFEINDEX_UV_TYPENO\" TEXT," + // 9: lifeindex_uv_typeno
                "\"LIFEINDEX_UV_TYPENM\" TEXT," + // 10: lifeindex_uv_typenm
                "\"LIFEINDEX_UV_ATTR\" TEXT," + // 11: lifeindex_uv_attr
                "\"LIFEINDEX_UV_DESE\" TEXT," + // 12: lifeindex_uv_dese
                "\"LIFEINDEX_GM_ID\" TEXT," + // 13: lifeindex_gm_id
                "\"LIFEINDEX_GM_TYPENO\" TEXT," + // 14: lifeindex_gm_typeno
                "\"LIFEINDEX_GM_TYPENM\" TEXT," + // 15: lifeindex_gm_typenm
                "\"LIFEINDEX_GM_ATTR\" TEXT," + // 16: lifeindex_gm_attr
                "\"LIFEINDEX_GM_DESE\" TEXT," + // 17: lifeindex_gm_dese
                "\"LIFEINDEX_CT_ID\" TEXT," + // 18: lifeindex_ct_id
                "\"LIFEINDEX_CT_TYPENO\" TEXT," + // 19: lifeindex_ct_typeno
                "\"LIFEINDEX_CT_TYPENM\" TEXT," + // 20: lifeindex_ct_typenm
                "\"LIFEINDEX_CT_ATTR\" TEXT," + // 21: lifeindex_ct_attr
                "\"LIFEINDEX_CT_DESE\" TEXT," + // 22: lifeindex_ct_dese
                "\"LIFEINDEX_XC_ID\" TEXT," + // 23: lifeindex_xc_id
                "\"LIFEINDEX_XC_TYPENO\" TEXT," + // 24: lifeindex_xc_typeno
                "\"LIFEINDEX_XC_TYPENM\" TEXT," + // 25: lifeindex_xc_typenm
                "\"LIFEINDEX_XC_ATTR\" TEXT," + // 26: lifeindex_xc_attr
                "\"LIFEINDEX_XC_DESE\" TEXT," + // 27: lifeindex_xc_dese
                "\"LIFEINDEX_KQ_ID\" TEXT," + // 28: lifeindex_kq_id
                "\"LIFEINDEX_KQ_TYPENO\" TEXT," + // 29: lifeindex_kq_typeno
                "\"LIFEINDEX_KQ_TYPENM\" TEXT," + // 30: lifeindex_kq_typenm
                "\"LIFEINDEX_KQ_ATTR\" TEXT," + // 31: lifeindex_kq_attr
                "\"LIFEINDEX_KQ_DESE\" TEXT);"); // 32: lifeindex_kq_dese
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"LIFE_INDEX_INFO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, LifeIndexInfo entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getId());
 
        String freshtime = entity.getFreshtime();
        if (freshtime != null) {
            stmt.bindString(2, freshtime);
        }
 
        String weaid = entity.getWeaid();
        if (weaid != null) {
            stmt.bindString(3, weaid);
        }
 
        String days = entity.getDays();
        if (days != null) {
            stmt.bindString(4, days);
        }
 
        String week_1 = entity.getWeek_1();
        if (week_1 != null) {
            stmt.bindString(5, week_1);
        }
 
        String simcode = entity.getSimcode();
        if (simcode != null) {
            stmt.bindString(6, simcode);
        }
 
        String citynm = entity.getCitynm();
        if (citynm != null) {
            stmt.bindString(7, citynm);
        }
 
        String cityid = entity.getCityid();
        if (cityid != null) {
            stmt.bindString(8, cityid);
        }
 
        String lifeindex_uv_id = entity.getLifeindex_uv_id();
        if (lifeindex_uv_id != null) {
            stmt.bindString(9, lifeindex_uv_id);
        }
 
        String lifeindex_uv_typeno = entity.getLifeindex_uv_typeno();
        if (lifeindex_uv_typeno != null) {
            stmt.bindString(10, lifeindex_uv_typeno);
        }
 
        String lifeindex_uv_typenm = entity.getLifeindex_uv_typenm();
        if (lifeindex_uv_typenm != null) {
            stmt.bindString(11, lifeindex_uv_typenm);
        }
 
        String lifeindex_uv_attr = entity.getLifeindex_uv_attr();
        if (lifeindex_uv_attr != null) {
            stmt.bindString(12, lifeindex_uv_attr);
        }
 
        String lifeindex_uv_dese = entity.getLifeindex_uv_dese();
        if (lifeindex_uv_dese != null) {
            stmt.bindString(13, lifeindex_uv_dese);
        }
 
        String lifeindex_gm_id = entity.getLifeindex_gm_id();
        if (lifeindex_gm_id != null) {
            stmt.bindString(14, lifeindex_gm_id);
        }
 
        String lifeindex_gm_typeno = entity.getLifeindex_gm_typeno();
        if (lifeindex_gm_typeno != null) {
            stmt.bindString(15, lifeindex_gm_typeno);
        }
 
        String lifeindex_gm_typenm = entity.getLifeindex_gm_typenm();
        if (lifeindex_gm_typenm != null) {
            stmt.bindString(16, lifeindex_gm_typenm);
        }
 
        String lifeindex_gm_attr = entity.getLifeindex_gm_attr();
        if (lifeindex_gm_attr != null) {
            stmt.bindString(17, lifeindex_gm_attr);
        }
 
        String lifeindex_gm_dese = entity.getLifeindex_gm_dese();
        if (lifeindex_gm_dese != null) {
            stmt.bindString(18, lifeindex_gm_dese);
        }
 
        String lifeindex_ct_id = entity.getLifeindex_ct_id();
        if (lifeindex_ct_id != null) {
            stmt.bindString(19, lifeindex_ct_id);
        }
 
        String lifeindex_ct_typeno = entity.getLifeindex_ct_typeno();
        if (lifeindex_ct_typeno != null) {
            stmt.bindString(20, lifeindex_ct_typeno);
        }
 
        String lifeindex_ct_typenm = entity.getLifeindex_ct_typenm();
        if (lifeindex_ct_typenm != null) {
            stmt.bindString(21, lifeindex_ct_typenm);
        }
 
        String lifeindex_ct_attr = entity.getLifeindex_ct_attr();
        if (lifeindex_ct_attr != null) {
            stmt.bindString(22, lifeindex_ct_attr);
        }
 
        String lifeindex_ct_dese = entity.getLifeindex_ct_dese();
        if (lifeindex_ct_dese != null) {
            stmt.bindString(23, lifeindex_ct_dese);
        }
 
        String lifeindex_xc_id = entity.getLifeindex_xc_id();
        if (lifeindex_xc_id != null) {
            stmt.bindString(24, lifeindex_xc_id);
        }
 
        String lifeindex_xc_typeno = entity.getLifeindex_xc_typeno();
        if (lifeindex_xc_typeno != null) {
            stmt.bindString(25, lifeindex_xc_typeno);
        }
 
        String lifeindex_xc_typenm = entity.getLifeindex_xc_typenm();
        if (lifeindex_xc_typenm != null) {
            stmt.bindString(26, lifeindex_xc_typenm);
        }
 
        String lifeindex_xc_attr = entity.getLifeindex_xc_attr();
        if (lifeindex_xc_attr != null) {
            stmt.bindString(27, lifeindex_xc_attr);
        }
 
        String lifeindex_xc_dese = entity.getLifeindex_xc_dese();
        if (lifeindex_xc_dese != null) {
            stmt.bindString(28, lifeindex_xc_dese);
        }
 
        String lifeindex_kq_id = entity.getLifeindex_kq_id();
        if (lifeindex_kq_id != null) {
            stmt.bindString(29, lifeindex_kq_id);
        }
 
        String lifeindex_kq_typeno = entity.getLifeindex_kq_typeno();
        if (lifeindex_kq_typeno != null) {
            stmt.bindString(30, lifeindex_kq_typeno);
        }
 
        String lifeindex_kq_typenm = entity.getLifeindex_kq_typenm();
        if (lifeindex_kq_typenm != null) {
            stmt.bindString(31, lifeindex_kq_typenm);
        }
 
        String lifeindex_kq_attr = entity.getLifeindex_kq_attr();
        if (lifeindex_kq_attr != null) {
            stmt.bindString(32, lifeindex_kq_attr);
        }
 
        String lifeindex_kq_dese = entity.getLifeindex_kq_dese();
        if (lifeindex_kq_dese != null) {
            stmt.bindString(33, lifeindex_kq_dese);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, LifeIndexInfo entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getId());
 
        String freshtime = entity.getFreshtime();
        if (freshtime != null) {
            stmt.bindString(2, freshtime);
        }
 
        String weaid = entity.getWeaid();
        if (weaid != null) {
            stmt.bindString(3, weaid);
        }
 
        String days = entity.getDays();
        if (days != null) {
            stmt.bindString(4, days);
        }
 
        String week_1 = entity.getWeek_1();
        if (week_1 != null) {
            stmt.bindString(5, week_1);
        }
 
        String simcode = entity.getSimcode();
        if (simcode != null) {
            stmt.bindString(6, simcode);
        }
 
        String citynm = entity.getCitynm();
        if (citynm != null) {
            stmt.bindString(7, citynm);
        }
 
        String cityid = entity.getCityid();
        if (cityid != null) {
            stmt.bindString(8, cityid);
        }
 
        String lifeindex_uv_id = entity.getLifeindex_uv_id();
        if (lifeindex_uv_id != null) {
            stmt.bindString(9, lifeindex_uv_id);
        }
 
        String lifeindex_uv_typeno = entity.getLifeindex_uv_typeno();
        if (lifeindex_uv_typeno != null) {
            stmt.bindString(10, lifeindex_uv_typeno);
        }
 
        String lifeindex_uv_typenm = entity.getLifeindex_uv_typenm();
        if (lifeindex_uv_typenm != null) {
            stmt.bindString(11, lifeindex_uv_typenm);
        }
 
        String lifeindex_uv_attr = entity.getLifeindex_uv_attr();
        if (lifeindex_uv_attr != null) {
            stmt.bindString(12, lifeindex_uv_attr);
        }
 
        String lifeindex_uv_dese = entity.getLifeindex_uv_dese();
        if (lifeindex_uv_dese != null) {
            stmt.bindString(13, lifeindex_uv_dese);
        }
 
        String lifeindex_gm_id = entity.getLifeindex_gm_id();
        if (lifeindex_gm_id != null) {
            stmt.bindString(14, lifeindex_gm_id);
        }
 
        String lifeindex_gm_typeno = entity.getLifeindex_gm_typeno();
        if (lifeindex_gm_typeno != null) {
            stmt.bindString(15, lifeindex_gm_typeno);
        }
 
        String lifeindex_gm_typenm = entity.getLifeindex_gm_typenm();
        if (lifeindex_gm_typenm != null) {
            stmt.bindString(16, lifeindex_gm_typenm);
        }
 
        String lifeindex_gm_attr = entity.getLifeindex_gm_attr();
        if (lifeindex_gm_attr != null) {
            stmt.bindString(17, lifeindex_gm_attr);
        }
 
        String lifeindex_gm_dese = entity.getLifeindex_gm_dese();
        if (lifeindex_gm_dese != null) {
            stmt.bindString(18, lifeindex_gm_dese);
        }
 
        String lifeindex_ct_id = entity.getLifeindex_ct_id();
        if (lifeindex_ct_id != null) {
            stmt.bindString(19, lifeindex_ct_id);
        }
 
        String lifeindex_ct_typeno = entity.getLifeindex_ct_typeno();
        if (lifeindex_ct_typeno != null) {
            stmt.bindString(20, lifeindex_ct_typeno);
        }
 
        String lifeindex_ct_typenm = entity.getLifeindex_ct_typenm();
        if (lifeindex_ct_typenm != null) {
            stmt.bindString(21, lifeindex_ct_typenm);
        }
 
        String lifeindex_ct_attr = entity.getLifeindex_ct_attr();
        if (lifeindex_ct_attr != null) {
            stmt.bindString(22, lifeindex_ct_attr);
        }
 
        String lifeindex_ct_dese = entity.getLifeindex_ct_dese();
        if (lifeindex_ct_dese != null) {
            stmt.bindString(23, lifeindex_ct_dese);
        }
 
        String lifeindex_xc_id = entity.getLifeindex_xc_id();
        if (lifeindex_xc_id != null) {
            stmt.bindString(24, lifeindex_xc_id);
        }
 
        String lifeindex_xc_typeno = entity.getLifeindex_xc_typeno();
        if (lifeindex_xc_typeno != null) {
            stmt.bindString(25, lifeindex_xc_typeno);
        }
 
        String lifeindex_xc_typenm = entity.getLifeindex_xc_typenm();
        if (lifeindex_xc_typenm != null) {
            stmt.bindString(26, lifeindex_xc_typenm);
        }
 
        String lifeindex_xc_attr = entity.getLifeindex_xc_attr();
        if (lifeindex_xc_attr != null) {
            stmt.bindString(27, lifeindex_xc_attr);
        }
 
        String lifeindex_xc_dese = entity.getLifeindex_xc_dese();
        if (lifeindex_xc_dese != null) {
            stmt.bindString(28, lifeindex_xc_dese);
        }
 
        String lifeindex_kq_id = entity.getLifeindex_kq_id();
        if (lifeindex_kq_id != null) {
            stmt.bindString(29, lifeindex_kq_id);
        }
 
        String lifeindex_kq_typeno = entity.getLifeindex_kq_typeno();
        if (lifeindex_kq_typeno != null) {
            stmt.bindString(30, lifeindex_kq_typeno);
        }
 
        String lifeindex_kq_typenm = entity.getLifeindex_kq_typenm();
        if (lifeindex_kq_typenm != null) {
            stmt.bindString(31, lifeindex_kq_typenm);
        }
 
        String lifeindex_kq_attr = entity.getLifeindex_kq_attr();
        if (lifeindex_kq_attr != null) {
            stmt.bindString(32, lifeindex_kq_attr);
        }
 
        String lifeindex_kq_dese = entity.getLifeindex_kq_dese();
        if (lifeindex_kq_dese != null) {
            stmt.bindString(33, lifeindex_kq_dese);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.getLong(offset + 0);
    }    

    @Override
    public LifeIndexInfo readEntity(Cursor cursor, int offset) {
        LifeIndexInfo entity = new LifeIndexInfo( //
            cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // freshtime
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // weaid
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // days
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // week_1
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // simcode
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // citynm
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // cityid
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // lifeindex_uv_id
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // lifeindex_uv_typeno
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // lifeindex_uv_typenm
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // lifeindex_uv_attr
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // lifeindex_uv_dese
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // lifeindex_gm_id
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // lifeindex_gm_typeno
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // lifeindex_gm_typenm
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // lifeindex_gm_attr
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // lifeindex_gm_dese
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // lifeindex_ct_id
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // lifeindex_ct_typeno
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // lifeindex_ct_typenm
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // lifeindex_ct_attr
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // lifeindex_ct_dese
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // lifeindex_xc_id
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // lifeindex_xc_typeno
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // lifeindex_xc_typenm
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // lifeindex_xc_attr
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // lifeindex_xc_dese
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // lifeindex_kq_id
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // lifeindex_kq_typeno
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // lifeindex_kq_typenm
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // lifeindex_kq_attr
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32) // lifeindex_kq_dese
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, LifeIndexInfo entity, int offset) {
        entity.setId(cursor.getLong(offset + 0));
        entity.setFreshtime(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setWeaid(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setDays(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setWeek_1(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setSimcode(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setCitynm(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setCityid(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setLifeindex_uv_id(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setLifeindex_uv_typeno(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setLifeindex_uv_typenm(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setLifeindex_uv_attr(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setLifeindex_uv_dese(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setLifeindex_gm_id(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setLifeindex_gm_typeno(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setLifeindex_gm_typenm(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setLifeindex_gm_attr(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setLifeindex_gm_dese(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setLifeindex_ct_id(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setLifeindex_ct_typeno(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setLifeindex_ct_typenm(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setLifeindex_ct_attr(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setLifeindex_ct_dese(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setLifeindex_xc_id(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setLifeindex_xc_typeno(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setLifeindex_xc_typenm(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setLifeindex_xc_attr(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setLifeindex_xc_dese(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setLifeindex_kq_id(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setLifeindex_kq_typeno(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setLifeindex_kq_typenm(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setLifeindex_kq_attr(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setLifeindex_kq_dese(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(LifeIndexInfo entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(LifeIndexInfo entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(LifeIndexInfo entity) {
        throw new UnsupportedOperationException("Unsupported for entities with a non-null key");
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
