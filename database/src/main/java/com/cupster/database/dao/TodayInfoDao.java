package com.cupster.database.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.cupster.database.model.TodayInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TODAY_INFO".
*/
public class TodayInfoDao extends AbstractDao<TodayInfo, Long> {

    public static final String TABLENAME = "TODAY_INFO";

    /**
     * Properties of entity TodayInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property FreshTime = new Property(1, String.class, "freshTime", false, "FRESH_TIME");
        public final static Property Success = new Property(2, String.class, "success", false, "SUCCESS");
        public final static Property Weaid = new Property(3, String.class, "weaid", false, "WEAID");
        public final static Property Days = new Property(4, String.class, "days", false, "DAYS");
        public final static Property Week = new Property(5, String.class, "week", false, "WEEK");
        public final static Property Cityno = new Property(6, String.class, "cityno", false, "CITYNO");
        public final static Property Citynm = new Property(7, String.class, "citynm", false, "CITYNM");
        public final static Property Cityid = new Property(8, String.class, "cityid", false, "CITYID");
        public final static Property Temperature = new Property(9, String.class, "temperature", false, "TEMPERATURE");
        public final static Property Temperature_curr = new Property(10, String.class, "temperature_curr", false, "TEMPERATURE_CURR");
        public final static Property Humidity = new Property(11, String.class, "humidity", false, "HUMIDITY");
        public final static Property Weather = new Property(12, String.class, "weather", false, "WEATHER");
        public final static Property Weather_curr = new Property(13, String.class, "weather_curr", false, "WEATHER_CURR");
        public final static Property Weather_icon = new Property(14, String.class, "weather_icon", false, "WEATHER_ICON");
        public final static Property Weather_icon1 = new Property(15, String.class, "weather_icon1", false, "WEATHER_ICON1");
        public final static Property Wind = new Property(16, String.class, "wind", false, "WIND");
        public final static Property Winp = new Property(17, String.class, "winp", false, "WINP");
        public final static Property Temp_high = new Property(18, String.class, "temp_high", false, "TEMP_HIGH");
        public final static Property Temp_low = new Property(19, String.class, "temp_low", false, "TEMP_LOW");
        public final static Property Temp_curr = new Property(20, String.class, "temp_curr", false, "TEMP_CURR");
        public final static Property Humi_high = new Property(21, String.class, "humi_high", false, "HUMI_HIGH");
        public final static Property Humi_low = new Property(22, String.class, "humi_low", false, "HUMI_LOW");
        public final static Property Weatid = new Property(23, String.class, "weatid", false, "WEATID");
        public final static Property Weatid1 = new Property(24, String.class, "weatid1", false, "WEATID1");
        public final static Property Windid = new Property(25, String.class, "windid", false, "WINDID");
        public final static Property Winpid = new Property(26, String.class, "winpid", false, "WINPID");
    }


    public TodayInfoDao(DaoConfig config) {
        super(config);
    }
    
    public TodayInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TODAY_INFO\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"FRESH_TIME\" TEXT," + // 1: freshTime
                "\"SUCCESS\" TEXT," + // 2: success
                "\"WEAID\" TEXT," + // 3: weaid
                "\"DAYS\" TEXT," + // 4: days
                "\"WEEK\" TEXT," + // 5: week
                "\"CITYNO\" TEXT," + // 6: cityno
                "\"CITYNM\" TEXT," + // 7: citynm
                "\"CITYID\" TEXT," + // 8: cityid
                "\"TEMPERATURE\" TEXT," + // 9: temperature
                "\"TEMPERATURE_CURR\" TEXT," + // 10: temperature_curr
                "\"HUMIDITY\" TEXT," + // 11: humidity
                "\"WEATHER\" TEXT," + // 12: weather
                "\"WEATHER_CURR\" TEXT," + // 13: weather_curr
                "\"WEATHER_ICON\" TEXT," + // 14: weather_icon
                "\"WEATHER_ICON1\" TEXT," + // 15: weather_icon1
                "\"WIND\" TEXT," + // 16: wind
                "\"WINP\" TEXT," + // 17: winp
                "\"TEMP_HIGH\" TEXT," + // 18: temp_high
                "\"TEMP_LOW\" TEXT," + // 19: temp_low
                "\"TEMP_CURR\" TEXT," + // 20: temp_curr
                "\"HUMI_HIGH\" TEXT," + // 21: humi_high
                "\"HUMI_LOW\" TEXT," + // 22: humi_low
                "\"WEATID\" TEXT," + // 23: weatid
                "\"WEATID1\" TEXT," + // 24: weatid1
                "\"WINDID\" TEXT," + // 25: windid
                "\"WINPID\" TEXT);"); // 26: winpid
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TODAY_INFO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, TodayInfo entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String freshTime = entity.getFreshTime();
        if (freshTime != null) {
            stmt.bindString(2, freshTime);
        }
 
        String success = entity.getSuccess();
        if (success != null) {
            stmt.bindString(3, success);
        }
 
        String weaid = entity.getWeaid();
        if (weaid != null) {
            stmt.bindString(4, weaid);
        }
 
        String days = entity.getDays();
        if (days != null) {
            stmt.bindString(5, days);
        }
 
        String week = entity.getWeek();
        if (week != null) {
            stmt.bindString(6, week);
        }
 
        String cityno = entity.getCityno();
        if (cityno != null) {
            stmt.bindString(7, cityno);
        }
 
        String citynm = entity.getCitynm();
        if (citynm != null) {
            stmt.bindString(8, citynm);
        }
 
        String cityid = entity.getCityid();
        if (cityid != null) {
            stmt.bindString(9, cityid);
        }
 
        String temperature = entity.getTemperature();
        if (temperature != null) {
            stmt.bindString(10, temperature);
        }
 
        String temperature_curr = entity.getTemperature_curr();
        if (temperature_curr != null) {
            stmt.bindString(11, temperature_curr);
        }
 
        String humidity = entity.getHumidity();
        if (humidity != null) {
            stmt.bindString(12, humidity);
        }
 
        String weather = entity.getWeather();
        if (weather != null) {
            stmt.bindString(13, weather);
        }
 
        String weather_curr = entity.getWeather_curr();
        if (weather_curr != null) {
            stmt.bindString(14, weather_curr);
        }
 
        String weather_icon = entity.getWeather_icon();
        if (weather_icon != null) {
            stmt.bindString(15, weather_icon);
        }
 
        String weather_icon1 = entity.getWeather_icon1();
        if (weather_icon1 != null) {
            stmt.bindString(16, weather_icon1);
        }
 
        String wind = entity.getWind();
        if (wind != null) {
            stmt.bindString(17, wind);
        }
 
        String winp = entity.getWinp();
        if (winp != null) {
            stmt.bindString(18, winp);
        }
 
        String temp_high = entity.getTemp_high();
        if (temp_high != null) {
            stmt.bindString(19, temp_high);
        }
 
        String temp_low = entity.getTemp_low();
        if (temp_low != null) {
            stmt.bindString(20, temp_low);
        }
 
        String temp_curr = entity.getTemp_curr();
        if (temp_curr != null) {
            stmt.bindString(21, temp_curr);
        }
 
        String humi_high = entity.getHumi_high();
        if (humi_high != null) {
            stmt.bindString(22, humi_high);
        }
 
        String humi_low = entity.getHumi_low();
        if (humi_low != null) {
            stmt.bindString(23, humi_low);
        }
 
        String weatid = entity.getWeatid();
        if (weatid != null) {
            stmt.bindString(24, weatid);
        }
 
        String weatid1 = entity.getWeatid1();
        if (weatid1 != null) {
            stmt.bindString(25, weatid1);
        }
 
        String windid = entity.getWindid();
        if (windid != null) {
            stmt.bindString(26, windid);
        }
 
        String winpid = entity.getWinpid();
        if (winpid != null) {
            stmt.bindString(27, winpid);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, TodayInfo entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String freshTime = entity.getFreshTime();
        if (freshTime != null) {
            stmt.bindString(2, freshTime);
        }
 
        String success = entity.getSuccess();
        if (success != null) {
            stmt.bindString(3, success);
        }
 
        String weaid = entity.getWeaid();
        if (weaid != null) {
            stmt.bindString(4, weaid);
        }
 
        String days = entity.getDays();
        if (days != null) {
            stmt.bindString(5, days);
        }
 
        String week = entity.getWeek();
        if (week != null) {
            stmt.bindString(6, week);
        }
 
        String cityno = entity.getCityno();
        if (cityno != null) {
            stmt.bindString(7, cityno);
        }
 
        String citynm = entity.getCitynm();
        if (citynm != null) {
            stmt.bindString(8, citynm);
        }
 
        String cityid = entity.getCityid();
        if (cityid != null) {
            stmt.bindString(9, cityid);
        }
 
        String temperature = entity.getTemperature();
        if (temperature != null) {
            stmt.bindString(10, temperature);
        }
 
        String temperature_curr = entity.getTemperature_curr();
        if (temperature_curr != null) {
            stmt.bindString(11, temperature_curr);
        }
 
        String humidity = entity.getHumidity();
        if (humidity != null) {
            stmt.bindString(12, humidity);
        }
 
        String weather = entity.getWeather();
        if (weather != null) {
            stmt.bindString(13, weather);
        }
 
        String weather_curr = entity.getWeather_curr();
        if (weather_curr != null) {
            stmt.bindString(14, weather_curr);
        }
 
        String weather_icon = entity.getWeather_icon();
        if (weather_icon != null) {
            stmt.bindString(15, weather_icon);
        }
 
        String weather_icon1 = entity.getWeather_icon1();
        if (weather_icon1 != null) {
            stmt.bindString(16, weather_icon1);
        }
 
        String wind = entity.getWind();
        if (wind != null) {
            stmt.bindString(17, wind);
        }
 
        String winp = entity.getWinp();
        if (winp != null) {
            stmt.bindString(18, winp);
        }
 
        String temp_high = entity.getTemp_high();
        if (temp_high != null) {
            stmt.bindString(19, temp_high);
        }
 
        String temp_low = entity.getTemp_low();
        if (temp_low != null) {
            stmt.bindString(20, temp_low);
        }
 
        String temp_curr = entity.getTemp_curr();
        if (temp_curr != null) {
            stmt.bindString(21, temp_curr);
        }
 
        String humi_high = entity.getHumi_high();
        if (humi_high != null) {
            stmt.bindString(22, humi_high);
        }
 
        String humi_low = entity.getHumi_low();
        if (humi_low != null) {
            stmt.bindString(23, humi_low);
        }
 
        String weatid = entity.getWeatid();
        if (weatid != null) {
            stmt.bindString(24, weatid);
        }
 
        String weatid1 = entity.getWeatid1();
        if (weatid1 != null) {
            stmt.bindString(25, weatid1);
        }
 
        String windid = entity.getWindid();
        if (windid != null) {
            stmt.bindString(26, windid);
        }
 
        String winpid = entity.getWinpid();
        if (winpid != null) {
            stmt.bindString(27, winpid);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public TodayInfo readEntity(Cursor cursor, int offset) {
        TodayInfo entity = new TodayInfo( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // freshTime
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // success
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // weaid
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // days
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // week
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // cityno
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // citynm
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // cityid
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // temperature
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // temperature_curr
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // humidity
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // weather
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // weather_curr
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // weather_icon
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // weather_icon1
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // wind
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // winp
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // temp_high
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // temp_low
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // temp_curr
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // humi_high
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // humi_low
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // weatid
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // weatid1
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // windid
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26) // winpid
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, TodayInfo entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setFreshTime(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setSuccess(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setWeaid(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setDays(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setWeek(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setCityno(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setCitynm(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setCityid(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setTemperature(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setTemperature_curr(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setHumidity(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setWeather(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setWeather_curr(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setWeather_icon(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setWeather_icon1(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setWind(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setWinp(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setTemp_high(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setTemp_low(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setTemp_curr(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setHumi_high(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setHumi_low(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setWeatid(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setWeatid1(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setWindid(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setWinpid(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(TodayInfo entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(TodayInfo entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(TodayInfo entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
